# 65C02 Breadboard linker config
# https://cc65.github.io/doc/customizing.html

MEMORY {
  ZP:     start = $0,    size = $FF,  type = rw, define = yes;
  RAM:    start = $0700, size = $76FF, define = yes;
  TMP:    start = $0300, size = $FF,  type = rw, define = yes;
  IO:     start = $0400  size = $FF,  fill = no;
  ROM:    start = $C000, size = $4000, fill = no;

}

SEGMENTS {

    #TMP_BUF:  load = TMP, type = rw,  define = yes;
    ZEROPAGE: load = ZP,  type = zp,  define   = yes;
    
    STARTUP:  load = RAM, type = ro;#, start = $0700;
    ONCE:     load = RAM, type = ro,  optional = yes;
    CODE:     load = RAM, type = ro;
    RODATA:   load = RAM, type = ro;
    DATA:     load = RAM, type = rw,  define   = yes, run = RAM;    
    BSS:      load = RAM, type = bss, define   = yes;
    HEAP:     load = RAM, type = bss, optional = yes;
    
    
    #VECTORS:  load = ROM, type = ro;   
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
  __STACKSIZE__:  type = export, value = $0100;
  __PORTB__:      type = export, value = $04f0;
  __PORTA__:      type = export, value = $04f1;
  __DDRA__:       type = export, value = $04f3;
  __DDRB__:       type = export, value = $04f2;
  __AcciaAdd__:   type = export, value = $0400;
}
